



ACME Working Group                                              B. Weeks
Internet-Draft                                                    Google
Intended status: Standards Track                           11 April 2022
Expires: 13 October 2022


 Automated Certificate Management Environment (ACME) Device Attestation
                               Extension
                 draft-bweeks-acme-device-attest-latest

Abstract

   This document specifies new identifiers and a challenge for the
   Automated Certificate Management Environment (ACME) protocol which
   allows validating the identity of a device using attestation.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 13 October 2022.

Copyright Notice

   Copyright (c) 2022 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Permanent Identifier
   4.  Device Attestation Challenge
   5.  Security Considerations
   6.  IANA Considerations
     6.1.  ACME Identifier Types
     6.2.  ACME Validation Method
   7.  Normative References
   Appendix A.  Enterprise PKI
     A.1.  External Account Binding
   Appendix B.  Certificate Fields
   Acknowledgments
   Author's Address

1.  Introduction

   The Automatic Certificate Management Environment (ACME) [RFC8555]}
   standard specifies methods for validating control over identifiers,
   such as domain names.  It is also useful to be able to validate
   properties of the device requesting the certificate, such as the
   identity of the device and if the certificate key is protected by a
   secure cryptoprocessor.

   Many operating systems and device vendors offer functionality
   enabling a device to generate a cryptographic attestation of their
   identity, such as: - Android Key Attestation - Chrome OS Verified
   Access - Trusted Platform Module

   This document specifies two new identifier types, permanent-
   identifier and hardware-module, along with a new challenge type,
   device-attest-01.  This challenge requires the client to generate an
   attestation that proves the asserted identifers belong to the device
   requesting the certificate.  Appendix A provide guidance on how these
   identifers can be used for issuing client certificates to devices in
   an enterprise PKI context.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Permanent Identifier

   [RFC4043] describes how an identity along with the organization that
   assigned the identity can be included in an X.509 certificate.

   If the server includes PermanentIdentifier or HardwareModule in the
   subjectAltName extension the device attestation MUST have been
   cryptographically verified.  If the server wishes to issue privacy-
   preserving certificates, it MAY omit PermanentIdentifier,
   HardwareModule, or both from the subjectAltName extension.

4.  Device Attestation Challenge

   The client can prove control over a permanent identifier of a device
   by providing an attestation statement containing the identifier of
   the device.

   The device-attest-01 ACME challenge object has the following format:

   type (required, string):  The string "device-attest-01".

   token (required, string):  A random value that uniquely identifies
      the challenge.  This value MUST have at least 128 bits of entropy.
      It MUST NOT contain any characters outside the base64url alphabet,
      including padding characters ("=").  See [RFC4086] for additional
      information on randomness requirements.

   {
     "type": "device-attest-01",
     "url": "https://example.com/acme/chall/Rg5dV14Gh1Q",
     "status": "pending",
     "token": "evaGxfADs6pSRb2LAv9IZf17Dt3juxGJ-PCt92wr-oA"
   }

   A client fulfills this challenge by generating an attestation object
   as described in Section 6.5.4 of [WebAuthn], substituting the "token"
   value provided in the challenge for the _hash_ and ommiting the
   _authData_ field entirely.

   This specification defines a new challenge response field attObj to
   contain WebAuthn attestation objects as described in Section 7.5.1 of
   [RFC8555].

   A client responds with the response object containing the WebAuthn
   attestation object in the attObj field to acknowledge that the
   challenge can be validated by the server.

   POST /acme/chall/Rg5dV14Gh1Q
   Host: example.com
   Content-Type: application/jose+json

   {
     "protected": base64url({
       "alg": "ES256",
       "kid": "https://example.com/acme/acct/evOfKhNU60wg",
       "nonce": "SS2sSl1PtspvFZ08kNtzKd",
       "url": "https://example.com/acme/chall/Rg5dV14Gh1Q"
     }),
     "payload": base64url({
       "attObj": base64url(/* WebAuthn attestation object */),
     }),
     "signature": "Q1bURgJoEslbD1c5...3pYdSMLio57mQNN4"
   }

5.  Security Considerations

   TODO Security

6.  IANA Considerations

6.1.  ACME Identifier Types

   The "ACME Validation Methods" registry is to be updated to include
   the following entry:

                   +======================+===========+
                   | Label                | Reference |
                   +======================+===========+
                   | permanent-identifier | RFC XXXX  |
                   +----------------------+-----------+
                   | hardware-module      | RFC XXXX  |
                   +----------------------+-----------+

                                 Table 1

6.2.  ACME Validation Method

   The "ACME Validation Methods" registry is to be updated to include
   the following entry:

          +==================+======================+===========+
          | Label            | Identifier Type      | Reference |
          +==================+======================+===========+
          | device-attest-01 | permanent-identifier | RFC XXXX  |
          +------------------+----------------------+-----------+

                                  Table 2

7.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC4043]  Pinkas, D. and T. Gindin, "Internet X.509 Public Key
              Infrastructure Permanent Identifier", RFC 4043,
              DOI 10.17487/RFC4043, May 2005,
              <https://www.rfc-editor.org/rfc/rfc4043>.

   [RFC4086]  Eastlake 3rd, D., Schiller, J., and S. Crocker,
              "Randomness Requirements for Security", BCP 106, RFC 4086,
              DOI 10.17487/RFC4086, June 2005,
              <https://www.rfc-editor.org/rfc/rfc4086>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8555]  Barnes, R., Hoffman-Andrews, J., McCarney, D., and J.
              Kasten, "Automatic Certificate Management Environment
              (ACME)", RFC 8555, DOI 10.17487/RFC8555, March 2019,
              <https://www.rfc-editor.org/rfc/rfc8555>.

   [WebAuthn] Lundberg, E., "Web Authentication: An API for accessing
              Public Key Credentials Level 2", April 2021,
              <https://www.w3.org/TR/webauthn-2/>.

Appendix A.  Enterprise PKI

   ACME was originally originally envisioned for issuing certificates in
   the Web PKI, however this extention will primarily be usedful in
   enterprise PKI.  The subsection below cover some operational
   considerations for an ACME-based enterprise CA.

A.1.  External Account Binding

   An enterprise CA likely only wants to recieve requests from
   authorized devices.  It is RECOMMENDED that the server require a
   value for the "externalAccountBinding" field to be present in
   "newAccount" requests.

Appendix B.  Certificate Fields

   TODO

Acknowledgments

   TODO acknowledge.

Author's Address

   Brandon Weeks
   Google
   Email: bweeks@google.com
